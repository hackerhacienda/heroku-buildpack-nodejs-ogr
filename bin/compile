#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# fail fast
set -e

# debug
# set -x


# clean up leaking environment
unset GIT_DIR

# config
SCONS_VERSION="1.2.0"

# parse and derive params
BUILD_DIR=$1
CACHE_DIR=$2
LP_DIR=`cd $(dirname $0); cd ..; pwd`

function error() {
  echo " !     $*" >&2
  exit 1
}

function mktmpdir() {
  dir=$(mktemp -t node-$1-XXXX)
  rm -rf $dir
  mkdir -p $dir
  echo $dir
}

function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}

function package_download() {
  engine="$1"
  version="$2"
  location="$3"

  mkdir -p $location
  package="http://${S3_BUCKET}.s3.amazonaws.com/$engine-$version.tgz"
  curl $package -s -o - | tar xzf - -C $location
}

# s3 packages
SCONS_PACKAGE="http://${S3_BUCKET}.s3.amazonaws.com/scons-${SCONS_VERSION}.tgz"

# vendor directories
VENDORED_SCONS="$(mktmpdir scons)"
package_download "scons" "${SCONS_VERSION}" "${VENDORED_SCONS}"

# vendor node into the slug
PATH="$BUILD_DIR/bin:$PATH"

# download/unpack GDAL binaries
GDAL_PACKAGE="https://s3.amazonaws.com/localdata-public/misc/downloads/gdal_heroku.tar.gz"
GDAL_VENDOR="vendor/gdal"
echo "-----> Fetching GDAL binaries"
mkdir -p $BUILD_DIR/$GDAL_VENDOR
curl -s $GDAL_PACKAGE -o - | tar -xz -C $BUILD_DIR/$GDAL_VENDOR --strip-components=1 -f -

# setting up paths for building
PATH="$VENDORED_SCONS:$VENDORED_NODE/bin:$PATH"
INCLUDE_PATH="$VENDORED_NODE/include"
export CPATH="$INCLUDE_PATH"
export CPPPATH="$INCLUDE_PATH"
